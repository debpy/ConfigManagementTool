Capabilities
~~~~~~~~~~~~~~
1)This tool runs a given PHP app in the given target host by setting up Apache webserver for delivering the web content.
2)Creates file with the name, content and necessary meta data(owner, group, permission modes)
3)Install & Remove packages in the target host
4)Restart necessary web service when relevant config files are modified

Assumptions
~~~~~~~~~~~~~~
The first time prerequisite packages installation of "inotify-tools", "php", "libapache2-mod-php" must be done using this tool rather than manually.

Architecture
~~~~~~~~~~~~~~
This tool consists of 4 scripts configure.sh, bootstrap.sh, version_Check.sh, config_Check.sh which gets executed in the mentioned order.Each of the script functionalities will be highlighted below

configure.sh
---------------
1)This is the entry point of the program.
2)It accepts several paramaters with corresponding options for performing relevant tasks(installing, removing packages, creating file with given content and metadata(owner, group, permission modes), copies php App to the Document Root of the Apache Webserver, configuring Apache
3)It copies all the 4 above mentioned shell scripts for execution to the target host considering whether it has been copied earlier or there are modifications in the targt host.
4)It takes a note of the hosts already configured by writing their IP to a file
5)It invokes the "bootstrap.sh" internally

bootstrap.sh
-------------
1)This script install the necessary packages("inotify-tools", "php", "libapache2-mod-php") if not installed
2)It sets up the Apache config and .htaccess with the necessary contents for rendering the web content
3)It writes the Apache & PHP version to the respective files. 
4)It then calls the "version_Check.sh" & "config_Check.sh" internally

version_Check.sh
--------------------
1)It reads the initial Apache and PHP versions from the above mentioned files and compares it with the one currently present
2)On detecting a change in versions it restarts Apache webservice

config_Check.sh
----------------
1)This monitors the Apache config directory for changes and restart Apache
2)On Apache start up failure it takes necessary actions to get it fixed


Sample Executions with various options
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Sample runs
------------

1)The option -t represents the 'target host' -p represents the 'path of the php app' present in the local system.

# ./configure.sh -t 54.144.94.189 -p /root/test.php 

Parse the options and the corresponding args
hosts file NOT yet created
Invoking the copy_Scripts function...
Generating public/private rsa key pair.
Enter file in which to save the key (/root/.ssh/id_rsa): 
/root/.ssh/id_rsa already exists.
Overwrite (y/n)? y
Enter passphrase (empty for no passphrase): 
Enter same passphrase again: 
Your identification has been saved in /root/.ssh/id_rsa.
Your public key has been saved in /root/.ssh/id_rsa.pub.
The key fingerprint is:
SHA256:mNQrpCjng2spMmXkRXPO08su7jYOrAVTtcKkJ6ns13g root@deb-HP-430-Notebook-PC
The key's randomart image is:
+---[RSA 4096]----+
|    . .          |
|   =o..o         |
|  +.==+..        |
|...=.=+o..       |
|o+=.. +oS.       |
|.=++o  .o        |
|.++o+E .         |
|++.+..+ .        |
|=..  =+o         |
+----[SHA256]-----+
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/root/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys
root@54.144.94.189's password: 

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh 'root@54.144.94.189'"
and check to make sure that only the key(s) you wanted were added.

bootstrap.sh                                                                                                100% 2322     9.3KB/s   00:00    
config_Check.sh                                                                                             100%  572     2.3KB/s   00:00    
configure.sh                                                                                                100% 3748    14.8KB/s   00:00    
version_Check.sh                                                                                            100%  772     3.1KB/s   00:00    
Package inotify-tools is already installed...
Package php is already installed...
Package libapache2-mod-php is already installed...
HTACCESS file path: /var/www/html/.htaccess
Configure HTACCESS...
Restarting Apache service...
Calling version_Check.sh...
PHP Version: 7.2.24
Current PHP Version: 7.2.24
Apache Version: 2.4.29
Current Apache Version: 2.4.29
No change in Apache & PHP  versions
Invoking config_Check.sh in background...
test.php          

2)The -i option specifies the package 'nmap' to be installed(Multiple package names can be given separated by space) in the target '54.144.94.189'

# ./configure.sh -t 54.144.94.189 -i nmap 

Parse the options and the corresponding args
Installing nmap...

WARNING: apt does not have a stable CLI interface. Use with caution in scripts.

Reading package lists...
Building dependency tree...
Reading state information...
Suggested packages:
  ndiff
The following NEW packages will be installed:
  nmap
0 upgraded, 1 newly installed, 0 to remove and 66 not upgraded.
Need to get 5174 kB of archives.
After this operation, 24.0 MB of additional disk space will be used.
Get:1 http://us-east-1.ec2.archive.ubuntu.com/ubuntu bionic/main amd64 nmap amd64 7.60-1ubuntu5 [5174 kB]
debconf: unable to initialize frontend: Dialog
debconf: (TERM is not set, so the dialog frontend is not usable.)
debconf: falling back to frontend: Readline
debconf: unable to initialize frontend: Readline
debconf: (This frontend requires a controlling tty.)
debconf: falling back to frontend: Teletype
dpkg-preconfigure: unable to re-open stdin: 
Fetched 5174 kB in 0s (33.5 MB/s)
Selecting previously unselected package nmap.
(Reading database ... 114210 files and directories currently installed.)
Preparing to unpack .../nmap_7.60-1ubuntu5_amd64.deb ...
Unpacking nmap (7.60-1ubuntu5) ...
Setting up nmap (7.60-1ubuntu5) ...
Processing triggers for man-db (2.8.3-2ubuntu0.1) ...

3)The -r option specifies the package 'nmap' to be removed from the target specified by option -t (Multiple package names can be given separated by space)

# ./configure.sh -t 54.144.94.189 -r nmap 
Parse the options and the corresponding args
Removing nmap...

WARNING: apt does not have a stable CLI interface. Use with caution in scripts.

Reading package lists...
Building dependency tree...
Reading state information...
The following packages were automatically installed and are no longer required:
  libblas3 liblinear3 liblua5.3-0
Use 'apt autoremove' to remove them.
The following packages will be REMOVED:
  nmap
0 upgraded, 0 newly installed, 1 to remove and 66 not upgraded.
After this operation, 24.0 MB disk space will be freed.
(Reading database ... 115021 files and directories currently installed.)
Removing nmap (7.60-1ubuntu5) ...
Processing triggers for man-db (2.8.3-2ubuntu0.1) ...

3)The -f option specifies the filename -c the file contents -u username -g group -m permission modes to be created in the target host specified with option -t

# ./configure.sh -t 54.144.94.189 -f test -c "This is a test file" -u root -g root -m 666 
Parse the options and the corresponding args
root:x:0:0:root:/root:/bin/bash
root:x:0:

# ssh -l root 54.144.94.189 "ls -l test"
-rw-rw-rw- 1 root root 20 Nov 17 12:41 test

# ssh -l root 54.144.94.189 "cat test"
This is a test file



